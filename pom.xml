<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <groupId>hms.dbmi.ppm</groupId>
    <artifactId>fhir-server</artifactId>
    <version>${env.DBMI_HAPI_FHIR_VERSION}</version>
    <packaging>war</packaging>

	<name>PPM FHIR Server</name>

	<repositories>
		<repository>
			<id>oss-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
	</repositories>

	<properties>
		<hapi-fhir-version>${env.HAPI_FHIR_VERSION}</hapi-fhir-version>
		<spring-version>5.2.3.RELEASE</spring-version>
		<spring-boot-data-version>2.2.6.RELEASE</spring-boot-data-version>
		<thymeleaf-version>3.0.11.RELEASE</thymeleaf-version>
		<jackson-version>2.10.0</jackson-version>
		<commons-lang3-version>3.9</commons-lang3-version>
		<jetty-version>9.4.24.v20191120</jetty-version>
	</properties>

	<profiles>

		<!-- These profiles determine the version of HAPI-FHIR to build -->
		<profile>
			<id>2.5.0</id>
			<properties>
				<hapi-fhir-version>2.5</hapi-fhir-version>
				<spring-version>4.3.7.RELEASE</spring-version>
				<spring-boot-data-version>2.0.1.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.2.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>2.4.0</id>
			<properties>
				<hapi-fhir-version>2.4</hapi-fhir-version>
				<spring-version>4.3.7.RELEASE</spring-version>
				<spring-boot-data-version>2.0.1.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.2.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.6.0</id>
			<properties>
				<spring-version>5.0.8.RELEASE</spring-version>
				<spring-boot-data-version>2.0.7.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.9.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.5.0</id>
			<properties>
				<spring-version>5.0.8.RELEASE</spring-version>
				<spring-boot-data-version>2.0.7.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.9.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.4.0</id>
			<properties>
				<spring-version>5.0.3.RELEASE</spring-version>
				<spring-boot-data-version>2.0.7.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.9.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.3.0</id>
			<properties>
				<spring-version>5.0.3.RELEASE</spring-version>
				<spring-boot-data-version>2.0.7.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.9.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.2.0</id>
			<properties>
				<spring-version>5.0.0.RELEASE</spring-version>
				<spring-boot-data-version>2.0.7.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.7.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.1.0</id>
			<properties>
				<spring-version>5.0.0.RELEASE</spring-version>
				<spring-boot-data-version>2.0.1.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.7.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.0.0</id>
			<properties>
				<spring-version>4.3.10.RELEASE</spring-version>
				<spring-boot-data-version>2.0.1.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.7.RELEASE</thymeleaf-version>
			</properties>
		</profile>
		<profile>
			<id>3.8.0</id>
			<properties>
				<spring-version>5.1.6.RELEASE</spring-version>
				<spring-boot-data-version>2.1.3.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.11.RELEASE</thymeleaf-version>
			</properties>
		</profile>

		<profile>
			<id>3.7.0</id>
			<properties>
				<spring-version>5.1.3.RELEASE</spring-version>
				<spring-boot-data-version>2.1.3.RELEASE</spring-boot-data-version>
				<thymeleaf-version>3.0.11.RELEASE</thymeleaf-version>
			</properties>
		</profile>

		<profile>
			<id>4.0.0</id>
			<properties>
			</properties>
		</profile>

		<profile>
			<id>4.1.0</id>
			<properties>
			</properties>
		</profile>

		<profile>
			<id>4.2.0</id>
			<properties>
			</properties>
		</profile>

		<profile>
			<id>5.0.0</id>
			<properties>
			</properties>
		</profile>

		<profile>
			<id>5.0.1</id>
			<properties>
			</properties>
		</profile>

		<profile>
			<id>5.0.2</id>
			<properties>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
    </profiles>

	<dependencies>
		<!-- These dependencies are being tested out -->
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-api</artifactId>
			<version>${jetty-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-client</artifactId>
			<version>${jetty-version}</version>
		</dependency>

		<!-- Needed for Email subscriptions -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.0</version>
			<exclusions>
				<exclusion>
					<groupId>javax.activation</groupId>
					<artifactId>activation</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- This dependency includes the core HAPI-FHIR classes -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
			<version>${hapi-fhir-version}</version>
		</dependency>

		<!-- This dependency includes the JPA server itself, which is packaged separately from the rest of HAPI FHIR -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<version>${hapi-fhir-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jcl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

        <!-- HAPI-FHIR Overlay -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir-version}</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir-version}</version>
			<classifier>classes</classifier>
			<scope>provided</scope>
		</dependency>

        <!-- For some reason JavaDoc crashed during site generation unless we have this dependency -->
		<dependency>
		    <groupId>javax.interceptor</groupId>
		    <artifactId>javax.interceptor-api</artifactId>
		    <scope>provided</scope>
            <version>1.2</version>
		</dependency>

		<!-- HAPI-FHIR uses Logback for logging support. The logback library is included automatically by Maven as a part of the hapi-fhir-base dependency, but you also need to include a logging library. Logback
			is used here, but log4j would also be fine. -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.13</version>
		</dependency>

		<!-- Needed for JEE/Servlet support -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- If you are using HAPI narrative generation, you will need to include Thymeleaf as well. Otherwise the following can be omitted. -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
            <version>${thymeleaf-version}</version>
		</dependency>

		<!-- Spring Web is used to deploy the server to a web container. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot-data-version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!-- You may not need this if you are deploying to an application server which provides database connection pools itself. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
			<version>2.7.0</version>
		</dependency>

		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>16.0.1</version>
		</dependency>

        <!-- Used for MySQL connections. -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.16</version>
        </dependency>

		<!-- webjars -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>Eonasdan-bootstrap-datetimepicker</artifactId>
			<version>4.17.43</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>font-awesome</artifactId>
			<version>5.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>awesome-bootstrap-checkbox</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jstimezonedetect</artifactId>
			<version>1.0.6</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>select2</artifactId>
			<version>4.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>jquery</artifactId>
			<version>3.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>moment</artifactId>
			<version>2.15.1</version>
		</dependency>

        <!-- JWT-->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>jwks-rsa</artifactId>
            <version>0.6.0</version>
        </dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8</version>
		</dependency>

		<dependency>
			<groupId>io.sentry</groupId>
			<artifactId>sentry-spring</artifactId>
			<version>1.7.16</version>
		</dependency>

	</dependencies>

	<build>

		<!-- Tells Maven to name the generated WAR file as hapi-fhir-jpaserver-example.war -->
		<finalName>fhir-server</finalName>

		<!-- Setup application properties from profile -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<!-- Tell Maven which Java source version you want to use -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- The configuration here tells the WAR plugin to include the FHIR Tester overlay. You can omit it if you are not using that feature. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.3</version>
				<configuration>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifestEntries>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
					<overlays>
						<overlay>
							<groupId>ca.uhn.hapi.fhir</groupId>
							<artifactId>hapi-fhir-testpage-overlay</artifactId>
						</overlay>
					</overlays>

				</configuration>
			</plugin>

			<plugin>
				<groupId>com.igormaznitsa</groupId>
				<artifactId>jcp</artifactId>
				<version>7.0.2</version>
				<configuration>
					<eol>\r\n</eol>
				</configuration>
				<executions>
					<execution>
						<id>preprocess-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>preprocess</goal>
						</goals>
						<configuration>
							<vars>
								<hapi_fhir_version_major>${env.HAPI_FHIR_VERSION_MAJOR}</hapi_fhir_version_major>
								<hapi_fhir_version_minor>${env.HAPI_FHIR_VERSION_MINOR}</hapi_fhir_version_minor>
								<hapi_fhir_version_patch>${env.HAPI_FHIR_VERSION_PATCH}</hapi_fhir_version_patch>
								<hapi_fhir_version>${env.HAPI_FHIR_VERSION}</hapi_fhir_version>
							</vars>
							<allowWhitespaces>true</allowWhitespaces>
							<eol>\r\n</eol>
							<excludeExtensions>
								<extension>xml</extension>
								<extension>txt</extension>
							</excludeExtensions>
							<extensions>
								<extension>java</extension>
							</extensions>
							<keepAttributes>true</keepAttributes>
							<keepComments>false</keepComments>
							<keepLines>true</keepLines>
							<sourceEncoding>UTF-8</sourceEncoding>
							<targetEncoding>UTF-8</targetEncoding>
							<ignoreMissingSources>false</ignoreMissingSources>
							<unknownVarAsFalse>true</unknownVarAsFalse>
							<dryRun>false</dryRun>
							<verbose>true</verbose>
							<clearTarget>true</clearTarget>
							<replaceSources>true</replaceSources>
							<careForLastEol>true</careForLastEol>
							<preserveIndents>true</preserveIndents>
							<dontOverwriteSameContent>false</dontOverwriteSameContent>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
