user {{ PPM_NGINX_USER }};

worker_processes auto;

pid {{ PPM_NGINX_PID_PATH }};

error_log /dev/stderr;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /dev/stdout;
	error_log /dev/stderr;

    server {
    {% if PPM_SSL is defined and PPM_SSL %}

        listen {{ PPM_PORT }} ssl;
        ssl_certificate "{{ PPM_SSL_PATH }}/{{ PPM_APP_DOMAIN }}.crt";
        ssl_certificate_key "{{ PPM_SSL_PATH }}/{{ PPM_APP_DOMAIN }}.key";

        error_page 497 https://$host:{{ PPM_PORT }}$request_uri;

    {% else %}

        listen {{ PPM_PORT }};

    {% endif %}

    {% if PPM_LB is defined and PPM_LB %}

        ##
        # AWS Configs
        #   Configure for load balancer
        ##

        set_real_ip_from {{ PPM_LB_SUBNET }};
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        # If load balanced, check the original protocol and redirect accordingly
        if ($http_x_forwarded_proto = 'http') {
             return 301 https://$host$request_uri;
        }

    {% endif %}

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }
        location ~* \.(css|png|jpg|jpeg|gif|ico|svg|woff|js)$ {

            # checks for static file, if not found proxy to app
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            proxy_pass   http://127.0.0.1:8080;

            access_log off;
        }


    {% if PPM_HEALTHCHECK is defined and PPM_HEALTHCHECK %}
        location {{ PPM_HEALTHCHECK_PATH }} {

        {% if PPM_LB is defined and PPM_LB %}
            # Only allow load balancer and local hosts
            allow {{ PPM_LB_SUBNET }};
            allow 127.0.0.1;
            deny all;
        {% endif %}

        {% if PPM_APP_HEALTHCHECK_PATH is defined %}

            # Proxy to FHIR's healthcheck endpoint
            proxy_pass   http://127.0.0.1:8080{{ PPM_APP_HEALTHCHECK_PATH }};

        {% else %}

            # Just return 200 to check on NGINX
            return 200;

        {% endif %}

            # Redirect logs to keep actual logs clean
            access_log /var/log/nginx/healthcheck.log;
        }
    {% endif %}

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            proxy_pass   http://127.0.0.1:8080;
        }

        client_max_body_size 4G;
        server_name _;
    }
}